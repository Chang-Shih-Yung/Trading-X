version: "3.8"

services:
  # PostgreSQL 資料庫
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: tradingx
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tradingx-network

  # Redis 快取
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tradingx-network

  # InfluxDB 時間序列資料庫
  influxdb:
    image: influxdb:2.7
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password123
      DOCKER_INFLUXDB_INIT_ORG: tradingx
      DOCKER_INFLUXDB_INIT_BUCKET: market_data
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - tradingx-network

  # Trading X 後端
  backend:
    build: .
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/tradingx
      ASYNC_DATABASE_URL: postgresql+asyncpg://user:password@postgres:5432/tradingx
      REDIS_URL: redis://redis:6379
      INFLUXDB_URL: http://influxdb:8086
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - influxdb
    volumes:
      - .:/app
    networks:
      - tradingx-network
    restart: unless-stopped

  # Celery Worker (後台任務處理)
  celery-worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/tradingx
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    networks:
      - tradingx-network
    restart: unless-stopped

  # Celery Beat (定時任務調度)
  celery-beat:
    build: .
    command: celery -A app.celery beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/tradingx
      REDIS_URL: redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    networks:
      - tradingx-network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - tradingx-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  tradingx-network:
    driver: bridge
