{
  "WEBSOCKET_REALTIME_DRIVER_DEPENDENCY": {
    "process_overview": "WebSocket Real-time Data Driver Engine - Data Foundation Layer for Phase1 Signal Generation",
    "version": "1.0.0", 
    "core_concept": "Multi-exchange real-time data + connection management + data quality assurance + unified distribution",

    "🌐 architecture_design": {
      "connection_architecture": {
        "multi_exchange_support": ["binance_spot", "binance_futures", "okx_spot", "bybit_spot"],
        "connection_mode": "async_websocket_with_connection_pooling",
        "load_balancing": "round_robin_with_latency_awareness",
        "fault_tolerance": "auto_reconnect_with_exponential_backoff"
      },
      "data_pipeline": {
        "receive_buffer": "ring_buffer_with_overflow_protection",
        "processing_queue": "priority_queue_by_data_type",
        "distribution_mechanism": "pub_sub_pattern_with_selective_routing",
        "backpressure_handling": "adaptive_throttling_on_downstream_congestion"
      }
    },

    "⚡ realtime_data_flow": {
      "Layer_0_connection_management": {
        "layer_level": "layer_0_connection_management",
        "description": "Multi-exchange WebSocket connection pool management",
        "dependency": "none (base service layer)",
        "time": "2ms",
        "operations": {
          "🔌 connection_pool_initialization": {
            "connection_count": "4 major exchanges x 2 backup connections",
            "connection_config": {
              "binance": {
                "spot_endpoint": "wss://stream.binance.com:9443/ws/btcusdt@kline_1m@kline_5m@depth20@ticker",
                "futures_endpoint": "wss://fstream.binance.com/ws/btcusdt@kline_1m@markPrice@depth20",
                "auth_required": "false",
                "rate_limit": "5 requests/second",
                "ping_interval": "30s"
              },
              "okx": {
                "endpoint": "wss://ws.okx.com:8443/ws/v5/public",
                "subscribe_topics": ["candle1m", "candle5m", "books5", "tickers"],
                "compression": "gzip_enabled"
              },
              "bybit": {
                "endpoint": "wss://stream.bybit.com/v5/public/spot",
                "topics": ["kline.1.BTCUSDT", "orderbook.1.BTCUSDT", "tickers.BTCUSDT"]
              }
            },
            "health_check": "ping every 5 seconds, 10 second timeout disconnect reconnect",
            "output": "🔌 active_connection_pool"
          },
          "🔄 auto_reconnection_mechanism": {
            "input": "connection_health_status",
            "reconnection_strategy": {
              "1st_attempt": "immediate reconnection (0s delay)",
              "2nd_attempt": "1 second delay reconnection",
              "3rd_attempt": "2 second delay reconnection", 
              "4th_attempt": "4 second delay reconnection",
              "5th_attempt_plus": "8 second delay reconnection (maximum)"
            },
            "failure_handling": {
              "consecutive_failure_threshold": "5 times",
              "degradation_strategy": "switch to backup exchange",
              "alert_mechanism": "push connection anomaly alert"
            },
            "output": "🔄 reconnection_status"
          }
        }
      },

      "Layer_1_data_ingestion": {
        "layer_level": "layer_1_data_ingestion",
        "description": "Real-time data reception and preliminary processing",
        "dependency": "✅ layer_0_connection_management",
        "time": "3ms",
        "operations": {
          "📊 multi_type_data_reception": {
            "input": "active_connection_pool",
            "data_types": {
              "kline_data": {
                "timeframes": ["1m", "5m", "15m"],
                "fields": ["open", "high", "low", "close", "volume", "quote_volume", "timestamp"],
                "frequency": "per minute/5 minute updates",
                "buffer_size": "60 data points rolling window"
              },
              "orderbook_data": {
                "depth": "top 20 bid/ask levels",
                "update_mode": "incremental updates + full snapshots",
                "frequency": "100-500ms level updates",
                "data_structure": "{bids: [[price, qty]], asks: [[price, qty]]}"
              },
              "real_time_trades": {
                "fields": ["price", "quantity", "timestamp", "is_buyer_maker"],
                "filtering": "only large trades (>0.1 BTC equivalent)",
                "aggregation": "1-second trade aggregation statistics"
              },
              "mark_price": {
                "source": "futures marking price",
                "frequency": "1 second updates",
                "purpose": "spot-futures arbitrage detection"
              }
            },
            "output": "📊 raw_multitype_data_stream"
          },
          "🔍 data_validation": {
            "input": "raw_multitype_data_stream",
            "validation_rules": {
              "timestamp_validation": {
                "timezone_unification": "all timestamps converted to UTC",
                "time_reasonableness": "timestamp must be within current time ±5 minutes",
                "sequence_check": "timestamp must be increasing"
              },
              "price_validation": {
                "reasonableness_check": "price change < 10% in 1min (normal market)",
                "cross_exchange_validation": "same pair price deviation < 1%",
                "non_zero_check": "price and quantity must be > 0"
              },
              "data_integrity": {
                "required_fields": "check all required fields exist",
                "format_validation": "numeric type and range checks",
                "json_format": "ensure correct JSON structure"
              }
            },
            "exception_handling": {
              "data_discard": "discard validation failed data directly",
              "alert_logging": "log abnormal data statistics",
              "degradation_strategy": "use last valid data"
            },
            "output": "🔍 validated_data_stream"
          }
        }
      },

      "Layer_2_data_processing": {
        "layer_level": "layer_2_data_processing", 
        "description": "Data cleaning, standardization and basic computation",
        "dependency": "✅ layer_1_data_ingestion",
        "time": "4ms",
        "operations": {
          "🧹 data_cleaning": {
            "input": "validated_data_stream",
            "cleaning_operations": {
              "outlier_detection": {
                "z_score_detection": "threshold ±3 standard deviations",
                "iqr_detection": "interquartile range outlier detection",
                "handling_method": "mark as anomaly but don't discard"
              },
              "missing_value_handling": {
                "kline_missing": "use previous kline close price to fill",
                "orderbook_missing": "use last snapshot data",
                "trade_data_missing": "mark as no trades"
              },
              "duplicate_data": {
                "dedup_logic": "deduplicate same timestamp + symbol data",
                "retention_strategy": "keep latest received data"
              }
            },
            "output": "🧹 cleaned_data_stream"
          },
          "📏 standardization_processing": {
            "input": "cleaned_data_stream",
            "standardization_methods": {
              "price_standardization": {
                "relative_change": "price_change_pct = (current - previous) / previous",
                "normalization": "min_max_scaling to [0, 1] based on 24h range",
                "log_transform": "log_return for large price movements"
              },
              "volume_standardization": {
                "relative_volume": "volume_ratio = current_volume / 24h_avg_volume",
                "volume_percentile": "volume_percentile based on historical data",
                "turnover_standardization": "turnover normalized by market cap"
              },
              "time_standardization": {
                "unified_timestamp": "all timestamps in UTC milliseconds",
                "time_alignment": "align to standard intervals (1m, 5m)",
                "timezone_marking": "preserve original timezone information"
              }
            },
            "output": "📏 standardized_data_stream"
          },
          "🔢 basic_computation": {
            "input": "standardized_data_stream",
            "computation_metrics": {
              "price_indicators": {
                "price_momentum": "price_momentum = (close - close_5_periods_ago) / close_5_periods_ago",
                "volatility": "rolling_volatility = std(returns, window=20)",
                "price_range": "price_range_pct = (high - low) / close"
              },
              "volume_indicators": {
                "volume_trend": "volume_trend = EMA(volume, 5) vs EMA(volume, 20)",
                "volume_anomaly": "volume_anomaly = current_volume > 3 * rolling_mean(volume, 20)",
                "money_flow": "money_flow = price_change * volume"
              },
              "liquidity_indicators": {
                "bid_ask_spread": "spread_pct = (ask - bid) / mid_price * 100",
                "orderbook_depth": "book_depth = sum(bid_volume + ask_volume)",
                "liquidity_ratio": "liquidity_ratio = total_volume / book_depth"
              }
            },
            "output": "🔢 calculated_metrics_stream"
          }
        }
      },

      "Layer_3_signal_distribution": {
        "layer_level": "layer_3_signal_distribution",
        "description": "Intelligent distribution and routing of processed data",
        "dependency": "✅ layer_2_data_processing",
        "time": "3ms",
        "operations": {
          "🎯 intelligent_routing": {
            "input": "calculated_metrics_stream",
            "routing_rules": {
              "phase1a_basic_signal_generation": {
                "data_type": "all_processed_data",
                "priority": "HIGH",
                "latency_requirement": "< 5ms",
                "format": "standardized_realtime_format"
              },
              "indicator_dependency_graph": {
                "data_type": "price_volume_data + basic_indicators",
                "batch_size": "5 data points",
                "latency_requirement": "< 10ms"
              },
              "phase1b_volatility_adaptation": {
                "data_type": "volatility_metrics + price_momentum",
                "trigger_condition": "volatility_spike > 95th_percentile",
                "emergency_mode": "immediate_routing"
              },
              "unified_signal_candidate_pool": {
                "data_type": "extreme_events + anomaly_detections",
                "trigger_condition": "critical_market_events",
                "latency_requirement": "< 3ms"
              }
            },
            "output": "🎯 routed_data_streams"
          },
          "📡 publish_subscribe": {
            "input": "routed_data_streams",
            "publishing_mechanism": {
              "topic_classification": {
                "realtime_price": "real-time price updates",
                "volume_alerts": "volume anomaly alerts",
                "volatility_spikes": "volatility surge events",
                "liquidity_changes": "liquidity change events"
              },
              "subscription_management": {
                "dynamic_subscription": "modules can dynamically subscribe/unsubscribe topics",
                "priority_queue": "CRITICAL > HIGH > MEDIUM > LOW",
                "backpressure_control": "auto_throttling when subscribers lag"
              }
            },
            "output": "📡 published_data_streams"
          },
          "📊 monitoring_statistics": {
            "input": "published_data_streams",
            "monitoring_metrics": {
              "data_throughput": "messages_per_second by topic",
              "latency_distribution": "p50, p95, p99 latency metrics",
              "connection_status": "active_connections by exchange",
              "error_rate": "error_rate by data_type",
              "data_quality": "data_quality_score by source"
            },
            "alerting_rules": {
              "high_latency": "p95_latency > 50ms",
              "connection_anomaly": "connection_failure_rate > 5%",
              "data_quality": "data_quality_score < 0.9",
              "throughput_anomaly": "message_rate deviation > 50%"
            },
            "output": "📊 monitoring_metrics"
          }
        }
      }
    },

    "🎯 performance_requirements_and_optimization": {
      "latency_targets": {
        "data_reception": "< 100ms from exchange",
        "internal_processing": "< 12ms (2+3+4+3)",
        "total_latency": "< 112ms end-to-end"
      },
      "throughput_targets": {
        "message_processing": "> 10,000 messages/second",
        "concurrent_connections": "> 20 websocket connections",
        "data_points": "> 1,000 data points/second"
      },
      "reliability_targets": {
        "connection_stability": "> 99.9% uptime",
        "data_integrity": "> 99.8% valid data",
        "latency_consistency": "p99 < 150ms"
      }
    },

    "🔧 technical_architecture": {
      "technology_stack": {
        "websocket_client": "websockets library (Python asyncio)",
        "data_processing": "pandas + numpy for numerical computation",
        "message_queue": "asyncio.Queue with priority support",
        "monitoring": "prometheus metrics + custom dashboards"
      },
      "deployment_architecture": {
        "containerization": "Docker container deployment",
        "scalability": "horizontal scaling support for multiple instances",
        "load_balancing": "load distribution through exchange allocation",
        "monitoring": "health checks + metrics collection"
      }
    },

    "🔗 integration_interfaces": {
      "provided_services": [
        "realtime_data_feed_service",
        "market_event_notification_service", 
        "data_quality_monitoring_service",
        "connection_health_status_service"
      ],
      "dependent_services": [
        "exchange_api_credentials_service",
        "system_configuration_service",
        "logging_monitoring_service"
      ],
      "data_outputs": [
        "phase1a_basic_signal_generation",
        "indicator_dependency_graph",
        "phase1b_volatility_adaptation", 
        "unified_signal_candidate_pool"
      ]
    }
  }
}
